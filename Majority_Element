Problem Statement: Given an array of N integers, write a program to return an element that occurs more than N/2 times in the given array. You may consider that such an element always exists in the array.
  	Example 1:
Input Format: N = 3, nums[] = {3,2,3}
Result: 3
Explanation: When we just count the occurrences of each number and compare with half of the size of the array, you will get 3 for the above solution. 

class Solution {
public:
    int majorityElement(vector<int>& nums) {

        int n = nums.size();
        map<int,int> mpp;
        for(int i=0;i<n;i++)
        {
            mpp[nums[i]]++;
        }

        for(auto it:mpp)
        {
            if(it.second>(n/2))
            {
                return it.first;
            }
        }

        return -1;
        
    }
};
